plugins {
  id 'java'
  id 'maven-publish'
  id 'com.enonic.xp.base' version '3.1.0'
  id "com.github.node-gradle.node" version '3.1.1'
}

dependencies {
  compileOnly "com.enonic.xp:lib-admin:${xpVersion}"
  implementation "com.github.ua-parser:uap-java:1.5.4"
  implementation "io.sentry:sentry:6.17.0"
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
}

node {
  download = true
  version = '16.0.0'
}

task npmInstallForce(type: NpmTask) {
  description = 'Update all project node dependencies'
  args = ['install', '--force']
}

task cleanNode(type: org.gradle.api.tasks.Delete) {
  delete 'node_modules'
}

task serverWebpack(type: NodeTask, dependsOn: npmInstall) {
  environment = ['NODE_ENV': nodeEnvironment()]
  // args = [ '--config', 'webpack.server.config.babel.js', '--color', '--hide-modules' ]
  args = ['--config', 'webpack.config.js', '--color']
  description = 'Build server JS.'
  inputs.dir 'src/main'
  outputs.dir "${buildDir}/resources/main"
  script = file('node_modules/webpack-cli/bin/cli.js')
}

processResources {
  include '**/*'
  exclude '**/.gitkeep'
  exclude '**/tsconfig.*.json'
  exclude '**/*.es'
  exclude '**/*.es6'
  exclude '**/*.ts'
  exclude '**/*.json'
  includeEmptyDirs false
}

jar {
  exclude 'assets/styles/**/*.js'

  dependsOn += serverWebpack
}

jar.outputs.dir "${buildDir}/resources/main"

def nodeEnvironment() {
  def environments = [prod: 'production', dev: 'development']
  def nodeEnv = environments[hasProperty('env') ? env : 'prod']
  return nodeEnv != null ? nodeEnv : 'production'
}

publishing {
  repositories {
    maven {
      name = "itemtestRepository"
      url = "https://repo.itemtest.no/releases"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      from components.java
      groupId group
      artifactId projectName
      version version
    }
  }
}
